using MyEngDictionary.BL.DBA;
using MyEngDictionary.BL.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MyEngDictionary.BL.Models
{
	/*
	 * >>> 07-08-2020 00:15
	 * 
	 * 1. Получить все пакеты
	 * 2. Работа с выбранным пакетм
	 * 2.1 Сохранить пакет
	 * 2.2 Добавить слово (attachPhrase)
	 * 2.3 Удалить слово (detachPhrase)
	 * 2.4 Удалить пакет (слова при этом не затрагиваются)
	 * 
	 * Да ладно, почему бы не скидать сохранения, загрузки в один класс...
	 * Но нет. Сохранение можно, загрузка коллекции в чем то другом.
	 * 
	 * 
	 * >>> 07-08-2020 09:05
	 * Какие главные вопросы и проблемы, которые вызывают стопорят?
	 * !!! Для бизнес логики, где работа с загруженными из бд данными, нет смысла писать через интерфейсы,
	 *		т.к. не предусматривается вариативность математических моделей.
	 *		Через интерфейсы удобно только поставщики данных.
	 *		Поэтому убираем интерфейсы там, где только логика вычислений.
	 *	С другой стороны, через интерфейсы мы только работаем с БД.	
	 * 
	 * >>> 07-08-2020 10:03
	 * Описание общей задачи клиента. Архитектура логики интерфейса пользователя.
	 * 1. Перечень окон.
	 * 1.1 Окно работы с пакетом: работа с фразой, список фраз пакета. Вызов окна 1.2 "Коллекция пакетов" для выбора текущего пакета.
	 * 1.2 Окно работы с коллекцией пакетов.
	 *		Удаление, создание пакетов, добавление фраз в пакет. Для добавления фразы в пакет вызывается окно 1.3 "Окно коллекции слов"
	 * 1.3 Окно коллекции слов. 
	 * >>> Для начала все слова и фразы размещены по пакетам по умолчанию. Выучил пачку слов - следующий пакет.
	 * 
	 * 
	 * 3. Общие функции
	 * 3.1 При запуске приложения загрузить последний пакет (по дате последнего изменения) и вывести его на главное окно
	 * 
	 * 
	 * 
	 * 
	 * 
	 */

	public class PhrasePackManagerModel
	{


		public IEnumerable<PhrasePack> GetAll()
		{
			return PhrasePackDBA.GetAll();
		}

		public void Save(PhrasePack pack)
		{
			pack.LastWrite = DateTime.Now;
			PhrasePackDBA.Save(pack);
		}

		public void Delete(PhrasePack pack)
		{
			PhrasePackDBA.Delete(pack);
		}
	}
}
