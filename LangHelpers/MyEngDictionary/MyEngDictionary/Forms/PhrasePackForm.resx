<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAMQOAADEDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtoeSYqZ0kPifbI3/n2yN/59sjf+fbI3/n2yN/59s
        jf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/oG2O/rGFlasAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmdJD31LGY/+XHnP/lx5z/5cec/+XH
        nP/lx5z/5cec/+XHnP/lx5z/5cec/+XHnP/lx5z/5cec/+XHnP/lx5z/5cec/+XHnP/gwJv/oW6N/QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9sjf/Pqpf/5cec/+XH
        nP/lx5z/5cec/+XHnP/lx5z/5cec/+XHnP/lx5z/5cec/+XHnP/lx5z/5cec/+XHnP/lx5z/5cec/+XH
        nP+fbI3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn2yN/6x8
        kv+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59s
        jf+fbI3/n2yN/59sjf+zh5edAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACfbI3/+d67//neu//53rv/+d67//neu//53rv/+d67//neu//53rv/+d67//neu//53rv/+d67//ne
        u//53rv/+d67//neu//53rv/8tW4/6FujvoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJ9sjf/53rv/+d67//neu//53rv/+d67//neu//53rv/+d67//neu//53rv/+d67//ne
        u//53rv/+d67//neu//53rv/+d67//neu//53rv/n2yN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACke5tXonOU9p9sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59s
        jf+fbI3/n2yN/59sjf+gbo//xaWt//neu//53rv/+d67//neu/+fbI3/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKFylPa2vtj/vtjv/77Y7/++2O//vtjv/77Y7/++2O//vtjv/77Y7/++2O//vtjv/77Y
        7/++2O//vtjv/77Y7/++2O//vtjv/7zQ6P+hb4//+d67//neu//53rv/+d67/59sjf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAn2yN/7W10P++2O//vtjv/77Y7/++2O//vtjv/77Y7/++2O//vtjv/77Y
        7/++2O//vtjv/77Y7/++2O//vtjv/77Y7/++2O//vtjv/59sjf/53rv/+d67//neu//53rv/n2yN/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfbI3/onia/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59s
        jf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/8qqrf/53rv/+d67//ne
        u/+fbI3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9sjf+noc3/p6HN/6ehzf+noc3/n2yN/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/Z5fL/onGQ//ne
        u//53rv/+d67/59sjf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn2yN/6ehzf+gc5f/oHOX/6eh
        zf+fbI3/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v+fbI3/+d67//neu//53rv/n2yN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfbI3/p6HN/6eh
        zf+noc3/p6HN/59sjf/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/59sjf/53rv/+d67//neu/+fbI3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9s
        jf+noc3/o4qw/6OKsP+noc3/n2yN/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/n2yN//neu//53rv/+d67/59sjf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAn2yN/6ehzf+ji7P/pIuz/6ehzf+fbI3/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v+fbI3/+d67//neu//53rv/n2yN/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACfbI3/p6HN/6ehzf+noc3/p6HN/59sjf/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/59sjf/53rv/+d67//neu/+fbI3/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9sjf+noc3/oHOX/6Bzl/+noc3/n2yN/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/n2yN//neu//53rv/+d67/59s
        jf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn2yN/6ehzf+noc3/p6HN/6ehzf+fbI3/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v+fbI3/+d67//ne
        u//53rv/n2yN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfbI3/p6HN/6OKsP+jirD/p6HN/59s
        jf/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/59s
        jf/53rv/+d67//neu/+fbI3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9sjf+noc3/o4uz/6SL
        s/+noc3/n2yN/97v+v/e7/r/3u/6/97v+v/IwdP/n2yN/59sjf+fbI3/yMHU/97v+v/e7/r/3u/6/97v
        +v/e7/r/n2yN//neu//53rv/+d67/59sjf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn2yN/6eh
        zf+noc3/p6HN/6ehzf+fbI3/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v+fbI3/+d67//neu//53rv/n2yN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACfbI3/p6HN/6Bzl/+gc5f/p6HN/59sjf/e7/r/3u/6/8jB0/+fbI3/n2yN/59sjf/IwdT/yMHT/59s
        jf+fbI3/yMHU/97v+v/e7/r/3u/6/59sjf/53rv/+d67//neu/+fbI3/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJ9sjf+noc3/p6HN/6ehzf+noc3/n2yN/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/n2yN//neu//53rv/+d67/59sjf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAn2yN/6ehzf+jirD/o4qw/6ehzf+fbI3/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v+fbI3/+d67//neu//y1bj/oW6N+wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfbI3/p6HN/6OLs/+ki7P/p6HN/6R5mv/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/59sjf+fbI3/n2yN/6Bs
        jvylc5COAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9sjf+noc3/p6HN/6ehzf+noc3/w8jk/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/n2yN/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn2yN/6ehzf+gc5f/oHOX/6eh
        zf+keZr/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v+fbI3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfbI3/p6HN/6eh
        zf+noc3/p6HN/59sjf/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/59sjf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9s
        jf+noc3/o4qw/6OKsP+noc3/pHma/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/n2yN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAoG6Q7aWVvv+ji7P/pIuz/6ehzf/DyOT/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/9nl8v+hbo77AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAChb41Mn26Q7p9sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59s
        jf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n22P/KNzlY4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AAf/8AAD/+AAAf/gAAH/4AAB/+AAAP+AAAD/AAAA/gAAAP4AAAD+AA
        AA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAf4AAAP+AA
        AP/gAAD/4AAA/+AAAP/wAAH/+AAD//////8=
</value>
  </data>
</root>