<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>