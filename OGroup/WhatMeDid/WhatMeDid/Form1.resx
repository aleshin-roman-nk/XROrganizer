<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAMQOAADEDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFaU+lgV1H+YFdR/mBXUf5gV1H+YFdR/mBXUf5gV1H+YFdR/mBX
        Uf5gV1H+YFdR/mBXUf5gV1H+YFdR/mBXUf5gV1H+YFdR/mBXUf5gV1H+X1ZQ/VZNRm5US0XrVEtF6wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYVpT6WBXUf5gV1H+YFdR/mBXUf5gV1H+YFdR/mBX
        Uf5gV1H+YFdR/mBXUf5gV1H+YFdR/mBXUf5gV1H+YFdR/mBXUf5gV1H+YFdR/mBXUf5fVlD9Vk1GblRL
        RetUS0XrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgV1H9o5mR/8K4rv/CuK7/wriu/8K4
        rv/CuK7/wriu/8K4rv/CuK7/wriu/8K4rv/CuK7/wriu/8K4rv/CuK7/wriu/8K4rv/CuK7/wriu/2Rb
        Vf9TSkWpVEtF/1RLRf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF9WUPzAtaz/6t/V/+rf
        1f/q39X/6t/V/+rf1f/q39X/6t/V/+rf1f/q39X/6t/V/+rf1f/q39X/6t/V/+rf1f/q39X/6t/V/+rf
        1f/q39X/amFb/1RLRqNUS0X/VEtF/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXVRO/MC1
        rP/q39X/6t/V/+rf1f/s4tn/7ePb/+3j2//t49v/7ePb/+vh1//r4df/6t/V/+rf1f/q39X/6t/V/+rf
        1f/q39X/6t/V/+rf1f9qYVv/VUpFnFRLRf9US0X/QEBACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABdVE78wLWs/+rf1f/q39X/6t/V/+zi2f/t49v/7ePb/+3j2//t49v/6+HX/+vh1//q39X/6t/V/+rf
        1f/q39X/6t/V/+rf1f/q39X/6t/V/2phW/9VSkWcVEtF/1RLRf9AQEAIAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAF1UTvzBt6//6t/V/+rf1f/q4Nb//v39///////////////////////49PD/+PTw/+rf
        1f/q39X/6t/V/+rf1f/q39X/6t/V/+rf1f/q39X/amFb/1RKRZRUS0X/VEtF/01NTRQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAXVRO/MO5sv/q39X/6t/V/+rf1f/u5t7/8Ojg//Do4P/w6OD/8Ojg//Do
        4P/w6OD/8Ojg//Do4P/w6OD/8Ojg/+vh1//q39X/6t/V/+rf1f9pYFv/U0pEilRLRf9US0X/V0lJIwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdVE78xLu0/+rf1f/q39X/6uDW//v59//8+/n//Pv5//z7
        +f/8+/n//Pv5//z7+f/8+/n//Pv5//z7+f/8+/n/8erk/+rf1f/q39X/6t/V/2lgW/9USkR8VEtF/1RL
        Rf9WS0NBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1UTvzEu7T/6t/V/+rf1f/q4Nb/+/n3//z7
        +f/8+/n//Pv5//z7+f/8+/n//Pv5//z7+f/8+/n//Pv5//z7+f/x6uT/6t/V/+rf1f/q39X/aWBb/1RK
        RHxUS0X/VEtF/1ZLQ0EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXVRO/Ma+t//q39X/6t/V/+rf
        1f/x6uP/8uzm//Ls5v/y7Ob/8uzm//Ls5v/y7Ob/8uzm//Ls5v/y7Ob/8uzm/+zj2v/q39X/6t/V/+rf
        1f9oYFv/VEpEfFRLRfxUS0X8U0tGYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdVE78yMG8/+rf
        1f/q39X/6uDW//n18v/59vT/+fb0//n29P/59vT/+fb0//n29P/59vT/+fb0//n29P/59vT/8Oni/+rf
        1f/r4dj/6+HY/2hgW/9USkR8VEtF91RLRfdWTESAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1U
        TvzLxsH/6t/V/+rf1f/q39X/9O7p//Xw6//18Ov/9fDr//Xw6//18Ov/9fDr//Xw6//18Ov/9fDr//Xw
        6//u5dz/6t/V/+3k3P/t5Nz/aGBb/1RKRHxVS0XuVUtF7lVKRZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAXVRO/MvGwf/q39X/6t/V/+rf1f/07un/9fDr//Xw6//18Ov/9fDr//Xw6//18Ov/9fDr//Xw
        6//18Ov/9fDr/+7l3P/q39X/7eTc/+3k3P9oYFv/VEpEfFVLRe5VS0XuVUpFnAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABdVE78zsrI/+rf1f/q39X/6t/W//bx7f/38u7/9/Lu//fy7v/38u7/9/Lu//fy
        7v/38u7/9/Lu//fy7v/38u7/7+ff/+rf1f/w5+D/8Ofg/2hgW/9USkR8VEtF3lRLRd5US0W6AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1UTvzPzMr/8Ojh//Do4f/q39b/9vHt//fy7v/38u7/9/Lu//fy
        7v/38u7/9/Lu//fy7v/38u7/9/Lu//fy7v/v59//6t/V//Lr5P/y6+T/aGBb/1RKRHxUTETDVExEw1RL
        RtcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXVRO/M/Myv/59vP/+fbz/+rf1f/z7ef/9O7p//Tu
        6f/07un/9O7p//Tu6f/07un/9O7p//Tu6f/07un/9O7p/+7l3P/q39X/9O7o//Tu6P9oYFv/VEpEfFRL
        RqBUS0agVEpF7QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdVE78z8zK//n28//59vP/6t/V//Pt
        5//07un/9O7p//Tu6f/07un/9O7p//Tu6f/07un/9O7p//Tu6f/07un/7uXc/+rf1f/07uj/9O7o/2hg
        W/9USkR8VEtGoFRLRqBUSkXtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1UTvzPzMr/////////
        ///w6eP/+PXy//n29P/59vT/+fb0//n29P/59vT/+fb0//n29P/59vT/+fb0//n29P/w6eL/6t/V//bx
        7f/28e3/aGBb/1RKRHxUTUR0VE1EdFVLRfoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXVRO/M/M
        yv////////////z7+v/y6+X/8uzm//Ls5v/y7Ob/8uzm//Ls5v/y7Ob/8uzm//Ls5v/y7Ob/8uzm/+zj
        2v/q39X/+PTx//j08f9oYFv/VEpEfFlISDxZSEg8VEtF/2YzMwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABdVVD70tDO//////////////////7+/f/8+/r//Pv6//z7+f/8+/n//Pv5//z7+f/8+/n//Pv5//z7
        +f/8+/n/8erk/+rf1f/69/X/+vf1/2hgW/9USkR8AAAAAgAAAAJTS0X/VE1HTwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAF1VUPvS0M7//////////////////v79//z7+v/8+/r//Pv5//z7+f/8+/n//Pv5//z7
        +f/8+/n//Pv5//z7+f/x6uT/6t/V//r39f/69/X/aGBb/1RKRHwAAAACAAAAAlNLRf9UTUdPAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAx8LCmvz8/P//////////////////////+/n4//v5+P/x6uP/8Ojg//Do
        4P/w6OD/8Ojg//Do4P/w6OD/8Ojg/+vh2P/q39X//Pv5//z7+f9oYFv/VEpEfAAAAAAAAAAAVUpF9FRL
        RI8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9/f19////////////////////////////////////////
        ////////////////////////9fDr/+rf1f/q39X/6t/V/+rf1f/+/v3//v79/2hgW/9USkR8AAAAAAAA
        AABVS0TcU0tFwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZdWPTj4eD/////////////////////////
        ///////////////////8+vj//Pr4//Tu6P/t49n/6t/V/+rf1f/q39X/6+HY////////////aGBb/1RK
        RHxQRUUwUEVFMFRMRclUS0XlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZl1Y9OPh4P//////////////
        //////////////////////////////z6+P/8+vj/9O7o/+3j2f/q39X/6t/V/+rf1f/r4dj/////////
        //9oYFv/VEpEfFBFRTBQRUUwVExFyVRLReUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9/f19////////
        //////////////////////////////////////////////////////////////v59//7+ff/+PXy//j0
        8f///////////2hgW/9VTEeQVEtF/1RLRf9US0X/VUtF6wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL+8
        up/Rz83/0c/N/9HPzf/Rz83/0c/N/9HPzf/Rz83/0c/N/9HPzf/Rz83/0c/N/9HPzf/Rz83/0c/N/9HP
        zf/Rz83/0c/N/9HPzf/Rz83/YlpV/1RKRHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAXVNO4lxUTv1cVE79XFRO/VxUTv1cVE79XFRO/VxUTv1cVE79XFRO/VxUTv1cVE79XFRO/VxU
        Tv1cVE79XFRO/VxUTv1cVE79XFRO/VxUTv1aUUz8VE1HTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABdU07iXFRO/VxUTv1cVE79XFRO/VxUTv1cVE79XFRO/VxUTv1cVE79XFRO/VxU
        Tv1cVE79XFRO/VxUTv1cVE79XFRO/VxUTv1cVE79XFRO/VpRTPxUTUdPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////8AAAn/AAAJ/wAACf8AAAn/AAAJ/wAACf8AAAn/AA
        AJ/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAADv8AAA7/AAAO/wAAD/8AAA//AA
        AP/wAAD/8AAAj/AAAP////////////////8=
</value>
  </data>
</root>